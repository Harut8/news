[project]
name = "carumi"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "pydantic<2.10.0",
    "pydantic-settings>=2.6.1",
    "python-dotenv>=1.0.1",
    "dependency-injector>=4.44.0",
    "fastapi>=0.115.6",
    "uvicorn>=0.32.1",
    "sqlalchemy>=2.0.36",
    "asyncpg>=0.30.0",
    "circuitbreaker>=2.0.0",
    "httpx>=0.28.1",
    "retry-async>=0.1.4",
    "pyjwt>=2.10.1",
    "alembic>=1.14.0",
    "alembic-postgresql-enum>=1.4.0",
    "uvloop>=0.21.0",
    "python-json-logger>=2.0.7",
    "crawlee>=0.5.4",
    "faststream[cli]>=0.5.34",
    "aio-pika>=9.5.4",
    "croniter>=6.0.0",
]

[tool.ruff]
# Exclude common directories that are typically not part of the source code or are generated by tools.
exclude = [
    "alembic",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "venv",
]

# Set the maximum line length to 127 characters.
line-length = 127

# Define the number of spaces used for indentation, aligning with Black's style.
indent-width = 4

# The minimum Python version to target, e.g., when considering automatic code upgrades,
# like rewriting type annotations
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (F) and a subset of the pycodestyle (E)  codes by default.
# pycodestyle warnings (W)
# Activate Security Rules (S) to replace bandit
# Enable the isort rules (I) to replace isort
# flake8-bugbear (B)
# flake8-simplify (SIM)
select = [
    "C",  # mccabe rules
    "F",  # pyflakes rules
    "E",  # pycodestyle error rules
    "W",  # pycodestyle warning rules
    "B",  # flake8-bugbear rules
    "I",  # isort rules
]
ignore = ["B008"] # List any rules to be ignored, currently empty.
task-tags = ["HACK"]
# Allow auto-fixing of all enabled rules when using the `--fix` option.
fixable = ["ALL"]
unfixable = [] # Specify rules that cannot be auto-fixed, if any.

[tool.ruff.format]
# Enforce double quotes for strings, following Black's style.
quote-style = "double"

# Use spaces for indentation, in line with Black's formatting style.
indent-style = "space"

# Keep magic trailing commas, a feature of Black's formatting.
skip-magic-trailing-comma = false

# Automatically detect and use the appropriate line ending style.
line-ending = "auto"
[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = ["pydantic.BaseModel", "sqlalchemy.orm.DeclarativeBase"]
[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "pydantic.validator",
    "declared_attr",
    "expression",
    "comparator",
]


[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
