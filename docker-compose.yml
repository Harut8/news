services:
  news:
    container_name: news
    restart: on-failure
    build:
      context: .
      dockerfile: app.Dockerfile
    ports:
      - "8000:8000"
    command: uvicorn main:fastapi_app --reload --host 0.0.0.0 --port 8000 --workers 3
    volumes:
      - .:/app
    depends_on:
      news-postgres:
        condition: service_healthy
      news-rabbitmq:
        condition: service_healthy

  news-worker:
    build:
      context: .
      dockerfile: worker.Dockerfile
    command: [ 'faststream', 'run', 'src/app/worker/rmq_spi:consumer_app', '--workers 3']
    container_name: news-worker
    restart: always
    depends_on:
      news-rabbitmq:
        condition: service_healthy
      news-postgres:
        condition: service_healthy

  news-postgres:
    image: postgres:16
    container_name: news-postgres
    hostname: news
    user: postgres
    restart: always
    volumes:
      - news-postgres:/var/lib/postgresql/data/
    ports:
      - "5433:5432"
    env_file:
      - ./src/core/conf/envs/.env.dev
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "postgres" ]
      interval: 2s
      timeout: 2s
      retries: 5
  news-rabbitmq:
    image: rabbitmq:3-management
    container_name: news-rabbitmq
    hostname: news-rabbitmq
    environment:
        - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
        - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD}
    restart: always
    ports:
      - '5673:5672'
      - '15673:15672'
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      start_period: 4s
      interval: 2s
      timeout: 2s
      retries: 5

volumes:
  news-postgres:
